@use "base_variables";

// Navbar

.nav-list {
    padding: 1.25rem 4rem;
    position: relative;

    // grid will allow us to use percentages of the viewport width instead of percentages of the vw unit.
    // percentages will mitigate the fixed margin issue.
    // it will also prevent a horizontal scrollbar from appearing?????
    // more so about fixed element size overflow than track size but ....   
    // good thoughts so far!
    
    // the use of vw for element margin in with a flex layout
    // ... will come back to bite us if a vertical scrollbar appears,
    // .. and if the viewport is too small to support the margin + other elements.
    // it will alter the layout from what the design displays, since a horizontal scrollbar may appear.
    // the margin isn't based on a percentage of the nav-list, it's based on a percentage of the viewport.
    // as the viewport shrinks, the margin will increase.
    // We can't use margin percentages of the navbar to take advantage of the inheritance heirarchy,
    //  ... as a percentage width here will calculate based on the <li> parent.
    // Thus, grid is the best option here. We can account for the field width + its percentage gap. Win win.
    // Plus, flexbox is a bit viral given its single directionality.
    
    --search-field-width: 28rem;
    
    display: grid;
    grid: 1fr
          /
          max-content
          calc(var(--search-field-width) + 12.95%)
          auto; // 12.95% of the nav-bar
    align-items: center;
    justify-items: right;

    /* fake borders so we can give them different linear gradients */
    &::before {
        content: "";

        position: absolute;
        top: 0;
        left: 0; // I guess by default, absolute elements account for relative parent's padding

        height: 2px;
        width: 100%;

        background: linear-gradient(#E9EAEC 0%, rgb(189 192 198 / 64%) 8%, rgb(189 192 198 / 64%) 92%, #E9EAEC 100%);
    }

    &::after {
        content: "";

        position: absolute;
        bottom: 0;
        left: 0; // I guess by default, absolute elements account for relative parent's padding
        // todo: read into default left value.

        height: 2px;
        width: 100%; // I guess the default width: auto; does not provide width to psuedo elements.
        // todo: read into width: auto; for psuedo elements

        background: linear-gradient(90deg, rgb(156 160 170 / 0.2) 0%, rgb(156 160 170 / 0.2) 12%, rgb(222 135 104 / 0.1) 13.82%, rgb(222 135 104 / 0.1) 22.2%, rgb(156 160 170 / 0.2) 24%, rgb(156 160 170 / 0.2) 31%, rgb(222 135 104 / 0.1) 33.14%, rgb(222 135 104 / 0.1) 66.12%, rgb(156 160 170 / 0.2) 68%, rgb(156 160 170 / 0.2) 71.33%, rgb(222 135 104 / 0.1) 73.11%, rgb(222 135 104 / 0.1) 86.84%, rgb(156 160 170 / 0.2) 89%);
    }

    .nav-item {
        &::marker {
            font-size: 0px;
        }
    }

    #search-form {
        .icon-field-wrapper {
            position: relative;
            height: 3rem;

            .field-icon {
                position: absolute;
                // 27px by 24px
                width: 1.3rem;
                height: 1.25rem;
                left: 0.5rem;
                top: 50%; // move top face by 50% from the top of the pos-relative div
                transform: translate(1rem, -50%); // translate 50% of width up such that the icon is positioned relative to the center of itself by 50% from the top of the pos-relative div
                pointer-events: none;

                path {
                    fill: base_variables.$oranger;
                }
            }


            #search-field {
                height: 100%;
                width: var(--search-field-width);
                border-radius: 1rem;
                // user text
                color: base_variables.$oranger;

                border: 1px solid rgba(163, 44, 1, 0.24);
                background: linear-gradient(180deg, rgb(239 217 210 / 0.72) 0%, rgb(234 205 195 / 0.72) 100%);
                box-shadow: inset 0px 4px 4px rgb(240 67 5 / 0.24);

                font-size: 1.25rem;
                padding-left: 3.6875rem; // hold space for the icon

                &::placeholder {
                    color: base_variables.$oranger;
                }

                transition: .4s outline;
                outline: 1px solid transparent;
                
                &:focus {
                    outline: 1px solid rbg(from base_variables.$oranger r g b / 99%);
                }
            }
        }
    }

    .account-info {
        margin-left: auto;

        display: grid;
        grid: "username btn--options" auto "credits btn--options" auto / auto auto;

        column-gap: 1rem;

        /* use percentage margins? or use grid on the nav-list instead of flex w/ percentage inline-length columns âœ… */
        .username {
            grid-area: username;
            align-self: end;
        }

        .credits {
            grid-area: credits;
        }

        // relationship between width, aspect-ratio, and child svg with 100% w/h.
        // why does width sometimes not respect aspect ratio? maybe due to how svg scales weirdly.
        .btn--options {
            width: 3rem;
            aspect-ratio: 1 / 1;

            place-self: center;

            grid-area: btn--options;
            background: base_variables.$black;
            border-radius: base_variables.$border-radius-med;
            padding: 0.875rem;

            /* Hide browser default tooltip when an svg element with <title> is hovered over */
            /* Warning: disables event emission for the svg */
            svg {
                pointer-events: none;
                width: 100%;
                height: 100%;
                fill: base_variables.$white;
                /* remove whitespace underneath replaced element */
                vertical-align: bottom;
                
                path {
                    fill: base_variables.$white;
                }
            }
            
            transition: .2s background;
            &:hover {
                background: rgb(from base_variables.$black r g b / 96%);
            }

        }
    }
}

// Sidebar

.sidebar {
    width: min-content;
    position: relative;
    padding: 4rem;
    
    // right border
    &::after {
        content: "";
        
        position: absolute;
        right: 0;
        top: 0;
        
        height: 100%;
        width: 2px;
        
        background: linear-gradient(180deg, rgba(156, 160, 170, 0.064) 0%, rgba(156, 160, 170, 0.128) 16%, rgba(156, 160, 170, 0.2) 32%, rgba(222, 135, 104, 0.128) 48%, rgba(222, 135, 104, 0.128) 64%, rgba(156, 160, 170, 0.064) 80%);
    }
    
    .sidebar-navlist {
        margin-bottom: 4rem;
        
        .navlist-item {
            width: fit-content;
            
            &::marker {
                font-size: 0;
            }
            
            /* icons should each be specific in their dimensions according to the design */
            svg {
                width: 2rem;
                height: 2rem;
                outline: 1px solid red;
            }
            
            .item-link {
                display: flex;
                align-items: center; // don't stretch and cause poor vertical alignment for text with a smaller block length than the largest element in the line (the icon)
                gap: 0.625rem;
            }
        }
        
        .navlist-item:nth-child(n+2) {
            margin-top: 2rem;
        }
    }
    
    .recent-thread-list {
        margin-top: .75rem;
        /* Not sure why body's max-content column track inline length squishes this. Explicitly give max-content width to the recently viewed subreddit: */
        width: max-content;
        
        .list__item {
            &::marker {
                font-size: 0px;
            }
        }
        .item__link {
            display: grid;
            grid: "logo subreddit" 1fr
                  "logo thread-title" 1fr
                  / auto 1fr;
            column-gap: .5rem;
            
            .thread__icon {
                width: 2rem;
                aspect-ratio: 1/1;
                grid-area: logo;
                align-self: center;
            }
            .thread__subreddit {
                grid-area: subreddit;
            }
            .thread__title {
                grid-area: thread-title;
            }
        }
    }
}

// Cards

.thread-card {
    padding: .75rem;
    border-radius: 1rem;
    border: 1px solid rgb(19 20 22 / 32%);
    background: #E9EAEC;
}