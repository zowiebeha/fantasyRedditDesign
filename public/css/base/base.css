@charset "UTF-8";
*, ::before, ::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  scroll-behavior: smooth;
}

body * {
  font-weight: 500;
  font-family: "Rubik";
  color: inherit;
}

body {
  color: hsl(278, 18%, 9%);
  background: hsl(220, 7%, 92%);
  height: 100vh;
  outline: 1px solid red;
  display: grid;
  grid: "header header" auto "sidebar main" 1fr/max-content 1fr;
}
body > header {
  grid-area: header;
}
body > aside {
  grid-area: sidebar;
}
body > main {
  grid-area: main;
}

main {
  height: 100%;
  overflow: hidden;
}

.scrollable-container {
  height: 100%;
  overflow-y: auto;
  scrollbar-color: hsl(278, 18%, 9%) transparent;
  padding: 4rem 3rem;
}

h1 {
  font-size: 2.25rem;
  font-weight: 500;
}

a {
  text-decoration: none;
}

button {
  cursor: pointer;
  border: none;
}

/* icons should each be specific in their dimensions according to the design */
*:not(svg) > svg.icon {
  width: 1.5rem;
  height: 1.5rem;
  pointer-events: none;
}

.sr-only {
  position: absolute;
  left: -100vw;
}

.text-orange {
  color: hsl(16, 99%, 46%);
}

.pos-relative {
  position: relative;
}

.h-100 {
  height: 100%;
}

.nav-list {
  padding: 1.25rem 4rem;
  position: relative;
  --search-field-width: 28rem;
  display: grid;
  grid: 1fr/max-content auto auto;
  align-items: center;
  justify-items: right;
  /* fake borders so we can give them different linear gradients */
}
@media screen and (max-width: 66rem) {
  .nav-list {
    column-gap: 2rem;
    --search-field-width: 100%;
  }
}
@media screen and (max-width: 54rem) {
  .nav-list {
    grid: ". logo logo" 1fr ". search-field account-info" 1fr/max-content max-content max-content;
    column-gap: 2rem;
    --search-field-width: 100%;
  }
  .nav-list .account-info {
    grid-area: account-info;
  }
  .nav-list .search {
    grid-area: search-field;
  }
  .nav-list .logo {
    grid-area: logo;
    align-self: center;
    width: 100%;
    text-align: center;
  }
}
.nav-list::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  height: 2px;
  width: 100%;
  background: linear-gradient(#E9EAEC 0%, rgba(189, 192, 198, 0.64) 8%, rgba(189, 192, 198, 0.64) 92%, #E9EAEC 100%);
}
.nav-list::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  height: 2px;
  width: 100%;
  background: linear-gradient(90deg, rgba(156, 160, 170, 0.2) 0%, rgba(156, 160, 170, 0.2) 12%, rgba(222, 135, 104, 0.1) 13.82%, rgba(222, 135, 104, 0.1) 22.2%, rgba(156, 160, 170, 0.2) 24%, rgba(156, 160, 170, 0.2) 31%, rgba(222, 135, 104, 0.1) 33.14%, rgba(222, 135, 104, 0.1) 66.12%, rgba(156, 160, 170, 0.2) 68%, rgba(156, 160, 170, 0.2) 71.33%, rgba(222, 135, 104, 0.1) 73.11%, rgba(222, 135, 104, 0.1) 86.84%, rgba(156, 160, 170, 0.2) 89%);
}
.nav-list .nav-item::marker {
  font-size: 0px;
}
@media screen and (max-width: 66rem) {
  .nav-list .nav-item {
    width: fit-content;
  }
}
.nav-list #search-form .icon-field-wrapper {
  position: relative;
  height: 3rem;
}
.nav-list #search-form .icon-field-wrapper .field-icon {
  position: absolute;
  width: 1.3rem;
  height: 1.25rem;
  left: 0.5rem;
  top: 50%;
  transform: translate(1rem, -50%);
}
.nav-list #search-form .icon-field-wrapper .field-icon path {
  fill: hsl(16, 99%, 51%);
}
.nav-list #search-form .icon-field-wrapper #search-field {
  height: 100%;
  width: var(--search-field-width);
  border-radius: 1rem;
  color: hsl(16, 99%, 51%);
  border: 1px solid rgba(163, 44, 1, 0.24);
  background: linear-gradient(180deg, rgba(239, 217, 210, 0.72) 0%, rgba(234, 205, 195, 0.72) 100%);
  box-shadow: inset 0px 4px 4px rgba(240, 67, 5, 0.24);
  font-size: 1.25rem;
  padding-left: 3.6875rem;
  transition: 0.2s box-shadow, 0.4s border-color;
}
.nav-list #search-form .icon-field-wrapper #search-field::placeholder {
  color: hsl(16, 99%, 51%);
}
.nav-list #search-form .icon-field-wrapper #search-field:focus {
  border-color: hsl(from hsl(16, 99%, 46%) h s calc(l + 32));
  outline: none;
  box-shadow: inset 0px 4px 4px rgba(240, 67, 5, 0.24), 0 0 0 2px rgba(218, 151, 135, 0.24);
}
.nav-list #search-form .icon-field-wrapper #search-field:hover {
  border-color: hsl(from hsl(16, 99%, 46%) h s calc(l + 32));
}
.nav-list .account-info {
  margin-left: auto;
  display: grid;
  grid: "username btn--options" auto "credits btn--options" auto/auto auto;
  column-gap: 1rem;
  /* use percentage margins? or use grid on the nav-list instead of flex w/ percentage inline-length columns âœ… */
}
@media screen and (max-width: 66rem) {
  .nav-list .account-info {
    display: block;
  }
}
.nav-list .account-info .username {
  grid-area: username;
  align-self: end;
}
@media screen and (max-width: 66rem) {
  .nav-list .account-info .username {
    position: absolute;
    left: -200vw;
  }
}
.nav-list .account-info .credits {
  grid-area: credits;
}
@media screen and (max-width: 66rem) {
  .nav-list .account-info .credits {
    position: absolute;
    left: -200vw;
  }
}
.nav-list .account-info .btn--options {
  width: 3rem;
  aspect-ratio: 1/1;
  place-self: center;
  grid-area: btn--options;
  background: hsl(278, 18%, 9%);
  border-radius: 16px;
  padding: 0.875rem;
  /* Hide browser default tooltip when an svg element with <title> is hovered over */
  /* Warning: disables event emission for the svg */
  transition: 0.2s background, 0.4s outline;
  outline: 2px solid transparent;
  outline-offset: -4px;
}
.nav-list .account-info .btn--options svg {
  pointer-events: none;
  width: 100%;
  height: 100%;
  fill: hsl(220, 7%, 92%);
  /* remove whitespace underneath replaced element */
  vertical-align: bottom;
}
.nav-list .account-info .btn--options svg path {
  fill: hsl(220, 7%, 92%);
}
.nav-list .account-info .btn--options:hover {
  background: rgb(from hsl(278, 18%, 9%) r g b/98%);
  outline: 2px solid hsl(220, 7%, 92%);
}

.sidebar {
  height: 100%;
  width: min-content;
  position: relative;
  padding: 4rem;
  padding-bottom: 0;
}
.sidebar::after {
  content: "";
  position: absolute;
  right: 0;
  top: 0;
  height: 100%;
  width: 2px;
  background: linear-gradient(180deg, rgba(156, 160, 170, 0.064) 0%, rgba(156, 160, 170, 0.128) 16%, rgba(156, 160, 170, 0.2) 32%, rgba(222, 135, 104, 0.128) 48%, rgba(222, 135, 104, 0.128) 64%, rgba(156, 160, 170, 0.064) 80%);
}
.sidebar .sidebar-navlist {
  margin-bottom: 4rem;
}
.sidebar .sidebar-navlist .navlist-item {
  width: fit-content;
}
.sidebar .sidebar-navlist .navlist-item::marker {
  font-size: 0;
}
.sidebar .sidebar-navlist .navlist-item .item-link {
  display: flex;
  align-items: center;
  gap: 0.625rem;
}
.sidebar .sidebar-navlist .navlist-item:nth-child(n+2) {
  margin-top: 2rem;
}
.sidebar .recent-thread-list {
  margin-top: 0.75rem;
  /* Not sure why body's max-content column track inline length squishes this. Explicitly give max-content width to the recently viewed subreddit: */
  width: max-content;
  height: 14.75rem;
  scrollbar-gutter: auto;
  overflow-y: auto;
  scrollbar-color: hsl(278, 18%, 9%) transparent;
  scrollbar-width: thin;
}
.sidebar .recent-thread-list .list__item::marker {
  font-size: 0px;
}
.sidebar .recent-thread-list .list__item:nth-child(n+2) {
  margin-top: 0.25rem;
}
.sidebar .recent-thread-list .item__link {
  display: grid;
  /* all auto vs. all 1fr??? hmm.. what is fr based on here? is it auto + any other available space?
  why is there additional space when I use fr? maybe a glitch? */
  grid: "logo subreddit" auto "logo thread-title" auto/auto auto;
  border: 1px solid transparent;
  padding: 0.5rem;
  transition: 0.4s border-color;
  border-radius: 0.5rem;
  gap: 0.25rem 0.5rem;
}
.sidebar .recent-thread-list .item__link:hover {
  border-color: hsl(from hsl(220, 7%, 92%) h s calc(l - 32));
}
.sidebar .recent-thread-list .item__link .thread__icon {
  width: 2rem;
  aspect-ratio: 1/1;
  grid-area: logo;
  align-self: center;
}
.sidebar .recent-thread-list .item__link .thread__subreddit {
  grid-area: subreddit;
}
.sidebar .recent-thread-list .item__link .thread__title {
  grid-area: thread-title;
  font-size: 0.75rem;
}

.card-list {
  display: flex;
  align-items: flex-end;
  column-gap: 2rem;
}

.card {
  padding: 0.75rem;
  border-radius: 1rem;
  border: 1px solid rgba(19, 20, 22, 0.32);
  background: #E9EAEC;
}

.card--thread-card {
  margin-left: 1rem;
  margin-top: 2rem;
  width: 40rem;
}
.card--thread-card .publication-info {
  display: grid;
  grid: "icon subreddit published" 1fr "icon author ." 1fr/auto auto auto;
  column-gap: 0.5rem;
  row-gap: 0.25rem;
  width: fit-content;
}
.card--thread-card .publication-info .icon {
  grid-area: icon;
}
.card--thread-card .publication-info .subreddit {
  grid-area: subreddit;
}
.card--thread-card .publication-info .published {
  grid-area: published;
  font-size: 0.75rem;
  color: rgba(14, 17, 27, 0.56);
  align-self: center;
  /*
     An inherited value takes effect for an element
     only if no other style declaration has been
     applied directly to the element.

     A style exists in the base to color all elements black.
     Thus, we must override time's black color to make it inherit from published.
  */
}
.card--thread-card .publication-info .published time {
  color: inherit;
}
.card--thread-card .publication-info .author {
  grid-area: author;
  font-size: 0.75rem;
}
.card--thread-card .card__title,
.card--thread-card .card__title + * {
  margin-top: 0.5rem;
}
.card--thread-card .card__title {
  font-size: 1.5rem;
}
.card--thread-card .social-buttons {
  margin-top: 0.75rem;
  display: flex;
  gap: 1rem;
  align-items: center;
  /*
      An inherited value takes effect for an element
      only if no other style declaration has been
      applied directly to the element.

      A style exists in the base to color all elements black.
      Thus, we must override the nested paragraph's black color to make it inherit from social-buttons.
  */
}
.card--thread-card .social-buttons p {
  color: inherit;
  line-height: 1.5;
}
.card--thread-card .social-buttons .btn--like,
.card--thread-card .social-buttons .btn--dislike {
  display: flex;
  gap: 0.75rem;
}

.card--thread-options {
  display: grid;
  grid: "credits badge" 1fr "btn-share btn-share" 1fr "btn-buy btn-sell" 1fr/1fr 1fr;
  place-items: center;
  gap: 1.5rem 0.75rem;
}
.card--thread-options .credit-cost {
  grid-area: credits;
  font-size: 1.25rem;
}
.card--thread-options .badge--growth {
  grid-area: badge;
  position: relative;
}
.card--thread-options .badge--growth .icon-wrapper {
  position: absolute;
  width: 2rem;
  height: 100%;
  border-radius: 0.375rem;
  background: #0B6F1A;
  display: flex;
  justify-content: center;
  align-items: center;
}
.card--thread-options .badge--growth .icon-wrapper .icon--growth {
  fill: #2CC944;
  width: 1rem;
}
.card--thread-options .badge--growth .growth__amount {
  width: fit-content;
  padding: 0 0.75rem 0 2.5rem;
  background: #8DE29A;
  color: #1D862D;
  border-radius: 0.375rem;
}
.card--thread-options .btn--share {
  display: flex;
  align-items: center;
  justify-content: space-between;
  column-gap: 1.5rem;
  padding: 0.25rem 0.75rem 0.25rem 1rem;
  width: 100%;
  border-radius: 0.75rem;
  background: #E0E0E0;
  border: 1px solid rgba(14, 17, 27, 0.16);
  grid-area: btn-share;
  transition: 0.2s scale ease-out;
}
.card--thread-options .btn--share:hover {
  scale: 1.05;
}
.card--thread-options .btn--buy {
  grid-area: btn-buy;
  color: #ECEDEE;
  background: hsl(16, 99%, 46%);
  border-radius: 1rem;
  padding: 0.5rem 2.5rem;
  transition: 0.2s background-color;
}
.card--thread-options .btn--buy:hover {
  background: hsl(from hsl(16, 99%, 46%) h s calc(l - 4));
}
.card--thread-options .btn--sell {
  grid-area: btn-sell;
  --bg-color: hsl(8, 89%, 42%);
  color: #ECEDEE;
  background: var(--bg-color);
  border-radius: 1rem;
  padding: 0.5rem 2.5rem;
  transition: 0.2s background-color;
}
.card--thread-options .btn--sell:hover {
  background: hsl(from var(--bg-color) h s calc(l - 4));
}

.underline-hover-no-svg > *:not(svg) {
  position: relative;
}
.underline-hover-no-svg > *:not(svg)::after {
  z-index: -1;
  position: absolute;
  bottom: 0.1em;
  border-radius: 0.5rem;
  left: 0;
  content: "";
  height: 2px;
  background: hsl(278, 18%, 9%);
  width: 0;
  transition: 0.2s width ease-out, 0.2s height ease-out;
}
.underline-hover-no-svg:hover > *:not(svg)::after {
  width: 100%;
}

.underline-hover {
  position: relative;
}
.underline-hover::after {
  z-index: -1;
  position: absolute;
  bottom: 0.1em;
  border-radius: 0.5rem;
  left: 0;
  content: "";
  height: 2px;
  background: hsl(278, 18%, 9%);
  width: 0;
  transition: 0.2s width ease-out, 0.2s height ease-out;
}
.underline-hover:hover::after {
  width: 100%;
}

.underline-hover--orange::after {
  background: hsl(16, 99%, 46%);
}

/*# sourceMappingURL=base.css.map */
